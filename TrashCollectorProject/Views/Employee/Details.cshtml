@model TrashCollectorProject.Models.CustomerPickupViewModel
@{
    ViewBag.Title = "Details";
}

<h2>Customer Details</h2>
<style>
    #map {
        height: 400px;
        width: 100%;
    }
</style>
<body>
    
        @Html.HiddenFor(model => model.CustomerPickup[0].Customer.Latitude)
        @Html.HiddenFor(model => model.CustomerPickup[0].Customer.Longitude)
    <div class="col-md-6">
        <div id="map"></div>
        <div>
            @Html.HiddenFor(model => model.EmployeeId)
            @Html.ActionLink("Back to Main Page", "Index", "Employee", new { id = Model.EmployeeId, dayChosen = Model.DayChosen }, null)
        </div>
    </div>
    <div class="col-md-6">
        <table>
            
            <tr>
                <td><label>Name: </label></td>
                <td>@Html.DisplayFor(model => model.CustomerPickup[0].Customer.Name)</td>
            </tr>
            <tr>
                <td><label>Address: </label></td>
                <td>@Html.DisplayFor(model => model.CustomerPickup[0].Customer.Address), @Html.DisplayFor(model => model.CustomerPickup[0].Customer.City), @Html.DisplayFor(model => model.CustomerPickup[0].Customer.State) @Html.DisplayFor(model => model.CustomerPickup[0].Customer.ZipCode)</td>
            </tr>
            
        </table>
    </div>
        
        <script>
            var map;
            var marker;
            function initMap() {
                var address = { lat: Number(document.getElementById('CustomerPickup_0__Customer_Latitude').value), lng: Number(document.getElementById('CustomerPickup_0__Customer_Longitude').value) };
                map = new google.maps.Map(document.getElementById('map'), { center: address, zoom: 14 });
                marker = new google.maps.Marker({ position: address, map: map });
            }
        </script>

        <script src="https://maps.googleapis.com/maps/api/js?key=@($"{TrashCollectorProject.Models.Geocoder.GetApiKey()}")&callback=initMap"
                async defer></script>
        
</body>




